from flask import Blueprint, jsonify, request
from main import db
# from models.rating import ating

rating = Blueprint('rating', __name__)

# # The GET routes endpoint
@rating.route("/", methods=["GET"])
def get_rating():
    # get all the rating from the database table
    # rating_list = rating.query.all()
    # Convert the rating from the database into a JSON format and store them in result
    #result = rating_schema.dump(rating_list)
    # return the data in JSON format
    #return jsonify(result)
    return "List of rating retrieved"

# # The POST route endpoint
@rating.route("/", methods=["POST"])
def create_rating():
    # #Create a new rating
    # rating_fields = rating_schema.load(request.json)

    new_rating = rating()
    new_rating.title = rating_fields["title"]
    new_rating.description = rating_fields["description"]
    new_rating.status = rating_fields["status"]
    new_rating.priority = rating_fields["audio_url"]
    # not taken from the request, generated by the server
    new_rating.date = date.today()
    # add to the database and commit
    db.session.add(new_rating)
    db.session.commit()
    #return the rating in the response
    return jsonify(rating_schema.dump(new_rating))
    return "rating created"


# # Finally, we round out our CRUD resource with a DELETE method
@rating.route("/<int:id>/", methods=["DELETE"])
def delete_rating(id):
    # #get the rating id invoking get_jwt_identity
    # rating_id = get_jwt_identity()
    # #Find it in the db
    # rating = rating.query.get(rating_id)
    # #Make sure it is in the database
    # if not rating:
    #     return abort(401, description="Invalid rating")
    # # Stop the request if the rating is not an admin
    # if not rating.admin:
    #     return abort(401, description="Unauthorised rating")
    # # find the rating
    # rating = rating.query.filter_by(id=id).first()
    # #return an error if the rating doesn't exist
    # if not rating:
    #     return abort(400, description= "rating doesn't exist")
    # #Delete the rating from the database and commit
    # db.session.delete(rating)
    # db.session.commit()
    # #return the rating in the response
    # return jsonify(rating_schema.dump(rating))
    return "rating Deleted"